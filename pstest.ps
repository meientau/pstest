(util.ps) runlibfile

/test-case {                    % <str> test-case mark
    print (\n) print

    % (*) create a package dict to count the tests
    3 dict begin
    /.test-total-count 0 def
    /.test-failed-count 0 def
    /.test-current-object null def

    % (**) mark the beginning of test results on the stack
    mark
} def

/should {                       % <str> should
    /.test-current-object exch def
} def

/assert-equal {                 % <str> <any> <any> assert-equal
    /.test-total-count inc
    eq {
        pop (.) print
    } {
        (F) print
        .test-current-object (\n  should ) 3 2 roll (\n)
        /.test-failed-count inc
    } ifelse
} bind def

/test-summary {	                % test-summary
    (\n) print
    (--------------------------------------------------\n) print
    .test-total-count 5 string cvs print ( tests, ) print
    .test-failed-count 5 string cvs print ( failed\n\n) print

    % (*) now we printed them, we don't need the counts any longer
    end

    (    expected: 2\n)
    (    actual:   1\n)

    % (**) release accumulated messages to stdout
    ] {
        print
    } forall
} def
